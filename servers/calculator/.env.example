# Environment Configuration for Authenticated Calculator MCP Server
# Copy this to .env and update with your Azure AD values

# Required Azure AD Configuration (only needed when ENABLE_AUTH=true)
AZURE_TENANT_ID=your-tenant-id-here
AZURE_CLIENT_ID=your-mcp-server-client-id-here

# MCP Server Configuration  
MCP_SERVER_URL=http://localhost:8000
MCP_HOST=0.0.0.0
MCP_PORT=8000
MCP_TRANSPORT=streamable-http

# Authentication Configuration
ENABLE_AUTH=true

# Optional: Logging Configuration
LOG_LEVEL=INFO

# =============================================================================
# Azure AD App Registration Setup Guide for Tool-Level Authorization:
# =============================================================================
#
# 1. Server App Registration (MCP Server):
#    - Create app registration for the MCP server
#    - Go to "App roles" and create the following roles:
#      * Role: MCP.User
#        Display name: MCP Basic User
#        Description: Can perform basic calculator operations
#        Allowed member types: Applications
#        Value: MCP.User
#      
#      * Role: MCP.Admin  
#        Display name: MCP Administrator
#        Description: Can perform all calculator operations
#        Allowed member types: Applications
#        Value: MCP.Admin
#    
#    - Set AZURE_CLIENT_ID to this app's Application (client) ID
#    - Set AZURE_TENANT_ID to your tenant ID
#
# 2. Client App Registration (MCP Client):
#    - Create separate app registration for the MCP client
#    - Go to "API permissions" > "Add a permission" > "My APIs"
#    - Select your server app registration
#    - Choose "Application permissions" (not delegated)
#    - Select the app roles you want to assign (MCP.User, MCP.Admin)
#    - Click "Grant admin consent for [tenant]"
#
# 3. Token Request Configuration:
#    - Scope: api://[server-app-client-id]/.default
#    - Grant type: client_credentials
#    - Token will contain 'roles' claim with assigned app roles
#    - Example roles in token: ["MCP.User"] or ["MCP.Admin"]
#
# 4. Tool Access Mapping:
#    - MCP.User role: add, subtract operations only
#    - MCP.Admin role: all operations (add, subtract, multiply, divide, calculate_expression)
#
# 5. Demo Mode (for testing without Azure AD):
#    - Set ENABLE_AUTH=false to run without authentication
#    - All tools will be accessible in demo mode
#
# Example client token request (using client credentials flow):
# POST https://login.microsoftonline.com/{tenant-id}/oauth2/v2.0/token
# Content-Type: application/x-www-form-urlencoded
# 
# client_id={client-app-id}&
# client_secret={client-secret}&
# scope=api://{server-app-id}/.default&
# grant_type=client_credentials